// <auto-generated />
using System;
using Blog.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Blog.DbMigrator.Migrations
{
    [DbContext(typeof(BlogDbContext))]
    [Migration("20210329150226_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ArticlePOTagPO", b =>
                {
                    b.Property<int>("ArticlesID")
                        .HasColumnType("integer")
                        .HasColumnName("articles_id");

                    b.Property<string>("TagsID")
                        .HasColumnType("text")
                        .HasColumnName("tags_id");

                    b.HasKey("ArticlesID", "TagsID")
                        .HasName("pk_article_tags");

                    b.HasIndex("TagsID")
                        .HasDatabaseName("ix_article_tags_tags_id");

                    b.ToTable("article_tags");
                });

            modelBuilder.Entity("Blog.Infrastructure.Models.ArticlePO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(256)")
                        .HasColumnName("code");

                    b.Property<int>("CommentCounts")
                        .HasColumnType("integer")
                        .HasColumnName("comment_counts");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("create_date");

                    b.Property<int>("ReadCounts")
                        .HasColumnType("integer")
                        .HasColumnName("read_counts");

                    b.Property<int>("State")
                        .HasColumnType("integer")
                        .HasColumnName("state");

                    b.Property<string>("SubTitle")
                        .HasColumnType("varchar(1024)")
                        .HasColumnName("sub_title");

                    b.Property<string>("Summary")
                        .HasColumnType("text")
                        .HasColumnName("summary");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(512)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("update_date");

                    b.HasKey("ID")
                        .HasName("pk_articles");

                    b.ToTable("articles");
                });

            modelBuilder.Entity("Blog.Infrastructure.Models.TagPO", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("Value")
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("ID")
                        .HasName("pk_tags");

                    b.ToTable("tags");
                });

            modelBuilder.Entity("ArticlePOTagPO", b =>
                {
                    b.HasOne("Blog.Infrastructure.Models.ArticlePO", null)
                        .WithMany()
                        .HasForeignKey("ArticlesID")
                        .HasConstraintName("fk_article_tags_articles_articles_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blog.Infrastructure.Models.TagPO", null)
                        .WithMany()
                        .HasForeignKey("TagsID")
                        .HasConstraintName("fk_article_tags_tags_tags_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
